name: Django CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  DOCKERHUB_IMAGE_NAME: pizza_shop

jobs:
  test:

    runs-on: ubuntu-latest
    
    services:
      database:
        image: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        env:
          POSTGRES_DB: pizza_db
          POSTGRES_USER: pizza_user
          POSTGRES_PASSWORD: pizza

    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.9", "3.10"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install psycopg2-binary coverage
        pip install -r requirements.txt
    - name: Run Tests
      run: |
        coverage run manage.py test
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3


  build_docker_image:
    needs: ["test"]

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
#          file: ./Dockerfile
#          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.DOCKERHUB_IMAGE_NAME }}:latest
#          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.DOCKERHUB_IMAGE_NAME }}:buildcache
#          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.DOCKERHUB_IMAGE_NAME }}:buildcache,mode=max

